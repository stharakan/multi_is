function [ franks ] = SelectFeatures( brain,bdir,outdir,ftype,psize,pstr,ppb,stype,fkeep,target)
%FEATURERANKERREGRESSION ranks the feature data generated by blist, ftype,
%and psize (combined with the ppvec generated by blist and psize) and
%outputs it in franks. There is no subsampling done here


% Add path to other code
prdir = [getenv('PRDIR'),'/'];
if isempty(outdir)
  outdir = [getenv('PRDIRSCRATCH'),'/'];
end
if isempty(bdir)
  bdir = [getenv('BRATSDIR'),'/preprocessed/trainingdata/meanrenorm/'];
end
addpath(bdir);
bcell = BrainCellAllTrain();
num_brains = length(bcell);
split_perc = 0.8;
num_trn_brains = num_brains*split_perc;

% initialize ps
if strcmp(pstr,'edemadist')
  ps = PointSelector(pstr,ppb,psize);
else
  ps = PointSelector(pstr,ppb);
end
fprintf('Point selector: %s\n',ps.PrintString());

% feature info
fprintf('Feature type: %s\n',ftype);

% start
disp('Loading trn');
trn = BrainPointList.LoadList(outdir,ps,num_trn_brains);
trn.PrintListInfo();

% load training data
[ trndata ] = GetBlistPatchFeatureData( trn,psize,ftype,outdir );
dd = size(trndata,2);

% whiten
[~,means,stds] = whiten(trndata);
clear trndata

% load ftOrder
[~,ftOrder,AvgPos] = LoadFtRanks(trn,stype,ftype,psize,target,outdir);


% read testing data
prefix = ['data.',ftype,'.ps.',num2str(psize)];
suffix = 'bin';
dstr = brain.MakeDataString(prefix,suffix);
fprintf(' Loading brain from file %s ..\n',dstr);
fid = fopen([outdir,dstr],'r');
tstdata = fread(fid,Inf,'single');
fclose(fid);
tstdata = reshape(tstdata,[],dd);

% truncate testing data
ftIdx = ftOrder(1:fkeep);
tstdata = tstdata(:,ftIdx); 
means = means(ftIdx);
stds = stds(ftIdx);
tstdata = whiten(tstdata,means,stds);
ntst = size(tstdata,1);
tstdata = double(tstdata');

% write testing data as double so no preprocessing necessary for knn?
prefix = ['knntst.dd.',num2str(fkeep),'.',ftype,'.ps.',num2str(psize)];
suffix = ['nn.',num2str(ntst),'.bin'];
dstr = brain.MakeDataString(prefix,suffix);
fprintf(' Saving brain to file %s ..\n',dstr);
fid = fopen([outdir,dstr],'w');
fwrite(fid,tstdata,'double');
fclose(fid);

end

